################################################################################
# FreeCAD module named EagleBRD for Importing Eagle 6.x .brd files into FreeCAD#
################################################################################

![Output in FreeCAD](wiki/images/output.jpg)

This project started in the end of 2011 as i was playing around with FreeCAD and 
the first versions of Cadsoft EAGLE 6.x. 
Some tools were available at this time (EagleUP, Eagle3D, ...) but most of them 
use SketchUp which i don't want to use or generate only a 3D picture (Povray) 
which can not be used in further CAD modeling.

This beta add-on Mod for FreeCAD should help out. 

Description / Features:
- The module imports the part translation file (translib.xml) of /EagleBRD/lib
- It opens the Eagle 6 .brd file and parses xml
- It searches for an optional .cfg file in same directory as .brd
- It searches for matching parts in .brd and translib
- It copies the parts into FreeCAD and places the parts depending on translib/.brd
- It places dummy parts (for e.g. small red sphere on places where no matching 
  3D file was found
- It generates a rectangular green board with plus 10mm border
- [alpha] Add group SIGNALS and draw signal routes (copper) of layers 
          top/bottom/IN1/IN2 + VIA's
- [alpha] Extracting PCB board directly out of informations in *.brd (dimension 
          Layer 20)
- [wishlist] --> Adding correct PCB board via path to .stp/FCStd in *.cfg file
- [wishlist] --> Add drills to extracted board
- [wishlist] --> Extract part pad's out of *.brd and connect to SIGNALS group
- [wishlist] --> Extract polygons out of *.brd and connect to SIGNALS group
- [wishlist] --> Add possibility to extrude IDF informations of not found parts 
                 out of *.brd if available (Layers 50, 57, 58) 
- [wishlist] --> Better import capabilities of 3D partfiles
- [wishlist] --> Better error handling in case of misuse


Usage:
1. Generate a folder named "EagleBRD" in the /Mod/ path of FreeCAD 
   (There should be folders like /Arch/ /Complete/ /Draft/ ...)
2. Copy all depending files into this folder 
   This should give
   .../Mod/EagleBRD/
                   |- Init.py
                   |- EagleBRD.py
                   |- /lib/
                           |- translib.xml
                           |- ...partfiles...
3. Start FreeCAD
4. Open a Eagle 6.x *.brd with FreeCAD or use drag-and-drop and drop it into 
   FreeCAD Window
5. Wait...wait...
6. Now you should get a 3D view of your PCB (or only errors and nothing else:( )


Library:
For adding new parts to the library you have to copy the *.stp,*.stl or *.FCStd 
file to /lib/ folder. For better differentiation i recommend to use the prefix 
USR_* before the filename.
Then copy the file translib.xml and renam the copy to USR_translib.xml (if not 
exist). Remove all "<trans package..." lines and add new lines for your new 
Eagle package name:
<trans package="AAA" file="BBB" desc="" movx="0" movy="0" movz="0" 
                                                    rotx="0" roty="0" rotz="0"/>

Where AAA is the Eagle package name and BBB the 3D file name. The desc is 
currently not used and move+rot values are offsets between origins of Eagle 
package and 3D model.
You can also use lines out of translib.xml and change for e.g. the offsets. The 
For entrys with the same package, the USR_translib.xml has a higher priority. So
you can virtually overwrite the translib entrys without changing the standard 
translib.xml.


FAQ:
- Why do you use a file named translib.xml and not directly the filename itself 
  (*.stp, ...)?
  Because if i have more Eagle packages with a different name, but the same 3D 
  model, i can assign all Eagle packages to one 3D CAD file. 
- Why do you have only this small quantity of 3D models in /lib/ ?
  Currently ALL of my models are generated by myself by hand or by self 
  generated python macro. I don't want to share files from other sites because of 
  licensing. So it will take while to generate new Packages.
  
Copyright and License:
Copyright (c) 2011 Franz Riedmueller <riedmueller.f@gmail.com>.
This code is distributed under the GNU General Public License.